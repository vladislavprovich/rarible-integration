replicaCount: 2

image:
  repository: vladislavprovich/rarible-integration
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: rarible-integration.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# readinessProbe:
#   httpGet:
#     path: /ready
#     port: http
#   initialDelaySeconds: 10
#   periodSeconds: 5
#   timeoutSeconds: 3
#   failureThreshold: 3

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - rarible-integration
          topologyKey: kubernetes.io/hostname

config:
  serviceName: "rarible-integration"
  environment: "development"

  server:
    port: 8080
    timeoutRouter: "5s"
    writeTimeout: "10s"
    idleTimeout: "60s"
    maxAge: 60
    allowCredentials: true

  httpClient:
    timeout: "15s"

  rarible:
    urls:
      rarities: "https://api.rarible.org/v0.1/items/traits/rarity"
      ownership: "https://api.rarible.org/v0.1/ownerships"

  logger:
    level: "debug"
    format: "json"
    withSource: false

secrets:
  rarible:
    apiSecret: "af882ffb-feec-47e0-8803-5f8f33adc20b"

podDisruptionBudget:
  enabled: true
  minAvailable: 1

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics

networkPolicy:
  enabled: false
  ingress:
    - from: []
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80